/**
 * 
 */
package mayank.BinaryTree;

/**
 * @author Mayank
 *
 */
public class MaxAmongAllRightNodes {
	
	
	static class Node { 
	      int data; 
	      Node left, right; 
	      Node(int key) 
	      { 
	           data = key; 
	           left = right = null; 
	      } 
	} 
	      static int maxOfRightElement(Node root) 
	      { 
	             int res = Integer.MIN_VALUE; 
	  
	             if (root == null) 
	                 return -1; 
	               
	              if (root.right != null) 
	                  res = root.right.data; 
	  
	              return   Math.max(res,maxOfRightElement(root.right)); 
	      } 

	      public static void main(String args[]) 
	      { 
	           // Create binary tree 
	          // as shown below 
	  
	          /*   7 
	              / \ 
	             6   5 
	            / \ / \ 
	            4 3 2  1  */ 
	       
	          Node root = new Node(7); 
	          root.left = new Node(6); 
	          root.right = new Node(5); 
	          root.left.left = new Node(4); 
	          root.left.right = new Node(3); 
	          root.right.left = new Node(18); 
	          root.right.right = new Node(10);
	   
	          System.out.println(maxOfRightElement(root)); 
	       } 
}
