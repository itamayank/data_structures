package mayank.String;

public class CountStringCanBeFormedUsingabc {
	
	// Given a length n, count the number of strings of length n that can be made using ‘a’, ‘b’ and ‘c’ with at-most one ‘b’
	// and two ‘c’s allowed

	static int countStrUtil(int[][][] dp, int n, int bCount, int cCount) {

		if (bCount < 0 || cCount < 0) {
			return 0;
		}
		if (n == 0) {
			return 1;
		}
		if (bCount == 0 && cCount == 0) {
			return 1;
		}

		// if we had saw this combination previously
		if (dp[n][bCount][cCount] != -1) {
			return dp[n][bCount][cCount];
		}

		int res = countStrUtil(dp, n - 1, bCount, cCount);
		res += countStrUtil(dp, n - 1, bCount - 1, cCount);
		res += countStrUtil(dp, n - 1, bCount, cCount - 1);

		return (dp[n][bCount][cCount] = res);
	}

	static int countStr(int n, int bCount, int cCount) {
		int[][][] dp = new int[n + 1][2][3];
		for (int i = 0; i < n + 1; i++) {
			for (int j = 0; j < 2; j++) {
				for (int k = 0; k < 3; k++) {
					dp[i][j][k] = -1;
				}
			}
		}
		return countStrUtil(dp, n, bCount, cCount);
	}

	public static void main(String[] args) {
		int n = 3; // Total number of characters
		int bCount = 1, cCount = 2;
		System.out.println(countStr(n, bCount, cCount));
	}
}
