package mayank.Array.dp;

public class NumberOfWaysToReachNthStairs {
	 static int fib(int n) 
	    { 
	       if (n <= 1) 
	          return n; 
	       return fib(n-1) + fib(n-2);     //(O n2)
	    } 
	      
	    static int countWays(int s) 
	    { 
	        return fib(s + 1); 
	    } 
	  
	    static int countWaysUtil(int n, int m) 
	    { 
	        int res[] = new int[n]; 
	        res[0] = 1; res[1] = 1; 
	       
	        for (int i=2; i<n; i++)                    // (O mn)
	        { 
	           res[i] = 0; 
	           for (int j=1; j<=m && j<=i; j++) 
	             res[i] += res[i-j]; 
	        } 
	        return res[n-1]; 
	    } 
	    public static void main (String args[]) 
	    { 
	          int s = 4,m = 2; //m = person can climb upto m stairs
	            System.out.println("Number of ways = "+ countWays(s)); 
	            System.out.println();
	            System.out.println("Number of ways = "+ countWaysUtil(s,m)); 

	    } 
}


/*static int countWaysUtil(int n, int m) 
    { 
        int res[] = new int[n]; 
        res[0] = 1; res[1] = 1; 
        for (int i=2; i<n; i++) 
        { 
           res[i] = 0; 
           for (int j=1; j<=m && j<=i; j++) 
             res[i] += res[i-j]; 
        } 
        return res[n-1]; 
    } 
       
    // Returns number of ways to reach s'th stair 
    static int countWays(int s, int m) 
    { 
        return countWaysUtil(s+1, m); 
    } 
  
    // Driver method  
    public static void main(String[] args) 
    { 
        int s = 4, m = 2; 
        System.out.println("Nuber of ways = " + countWays(s, m)); 
    } */
