// Java to find positions of zeroes flipping which
	// produces maximum number of consecutive 1's

package mayank.Array;

public class MaxFlipToMaximizeConsq1s {

	static int arr[] = new int[] { 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0 };
	

	static void findZeroes(int m) {
		int wL = 0, wR = 0;

		int bestL = 0, bestWindow = 0;

		int zeroCount = 0;

		while (wR < arr.length) {
			
			if (zeroCount <= m) {
				if (arr[wR] == 0)
					zeroCount++;
				wR++;
			}

			if (zeroCount > m) {
				if (arr[wL] == 0)
					zeroCount--;
				wL++;
			}

			if ((wR - wL > bestWindow) && (zeroCount <= m)) {
				bestWindow = wR - wL;
				bestL = wL;
			}	
		}

		for (int i = 0; i < bestWindow; i++) {
			if (arr[bestL + i] == 0)
				System.out.print(bestL + i + " ");
		}
	}

	public static void main(String[] args) {
		int m = 2;
		System.out.println("Indexes of zeroes to be flipped are ");

		findZeroes(m);
	}
}
