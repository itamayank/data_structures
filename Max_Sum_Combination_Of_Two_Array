package mayank.Array.dp;

public class MaxSumCombOfTwoArray {
	
	//no same index
//	The task is to choose some elements from both the arrays such that no two elements
//	have the same index and no two consecutive numbers can be selected from a single array.
//	Find the maximum sum possible of above-chosen numbers.
	
	
	static int Max_Sum(int arr1[], int arr2[], int n) {
		
		int[][] dp = new int[n][2];
		
		dp[0][0] = arr1[0];
		dp[0][1] = arr2[0];

		for (int i = 1; i < n; i++) {

			dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][1] + arr1[i]);
			dp[i][1] = Math.max(dp[i - 1][1], dp[i - 1][0] + arr2[i]);
		}

		return Math.max(dp[n - 1][0], dp[n - 1][1]);
	}

	public static void main(String[] args) {
		int arr1[] = { 9, 3, 5, 7, 3 };
		int arr2[] = { 5, 8, 1, 4, 5 };

		int n = arr1.length;

		System.out.println(Max_Sum(arr1, arr2, n));
	}
}
