package mayank.Array; //

import java.util.Arrays;


	//Given an array of n integers where each value represents number of chocolates in a packet. 
	//Each packet can have variable number of chocolates. 
	//There are m students, the task is to distribute chocolate packets such that:
	//
	//Each student gets one packet.
	//The difference between the number of chocolates in packet with maximum chocolates
	//and packet with minimum chocolates given to the students is minimum

public class ChocolateDistributionProblem {

		static int findMinDiff(int arr[], int n, 
										int m) 
		{ 
			if (m == 0 || n == 0) 
				return 0; 
		
			Arrays.sort(arr); 
		
			if (n < m) 
			return -1; 
		
			// Largest number of chocolates 
			int min_diff = Integer.MAX_VALUE;              //O(n Log n) as we apply sorting before subarray search.
			for (int i = 0; i  < n; i++) 
			{ 
				if(i+m-1 < n)
				min_diff = Math.min(arr[i+m-1]-arr[i],min_diff);
				
			} 
			return min_diff; 
		} 
		
		public static void main(String[] args) 
		{ 
			int arr[] = {12, 4, 7, 9, 2, 23, 
						25, 41, 30, 40, 28, 
						42, 30, 44, 48, 43, 
					50}; 
						
			int m = 7; // Number of students 
			
			int n = arr.length; 
			System.out.println("Minimum difference is "
					+ findMinDiff(arr, n, m)); 
				
		} 
	} 

