package mayank.Array;

public class FarthestSmallestNoRightSide {
	
	static void farthest_min(int [] a, int n) 
	{ 
		int [] suffix_min = new int[n]; 
		
		suffix_min[n - 1] = a[n - 1]; 
		for (int i = n - 2; i >= 0; i--) 
		{ 
			suffix_min[i] = Math.min(suffix_min[i + 1], a[i]); 
		} 

		for (int i = 0; i < n; i++) 
		{ 
			int low = i + 1, high = n - 1, ans = -1; 

			while (low <= high) 
			{ 
				int mid = (low + high) / 2; 

				if (suffix_min[mid] < a[i]) 
				{ 
					ans = mid; 
					low = mid + 1; 
				} 
				else
					high = mid - 1; 
			} 

			System.out.print(ans + " "); 
		} 
	} 
	public static void main (String[] args) 
	{ 
		int [] a = { 3,0, 1, 5, 2, 4 }; 
		int n = a.length; 

		farthest_min(a, n); 
	} 
	} 
