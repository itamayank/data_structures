/**
 * 
 */
package mayank.Array;

/**
 * @author Mayank
 *
 */
public class FindNumberOfRotationsOfSortedArray {

	// index of min element tells the number of rotations of sorted array 
	
	//  ** to check if array is sorted and rotated - find the min element nd check if right side elements are in ascending 
	 // an left side elements are in descending orders

	static int countRotations(int arr[], int low, int high) {
		
		if (high < low)
			return 0;

		if (high == low)
			return low;

		int mid = (low + high) / 2;
		
		if (mid < high && arr[mid + 1] < arr[mid])
			return (mid + 1);

		if (mid > low && arr[mid] < arr[mid - 1])
			return mid;

		if (arr[high] > arr[mid])
			return countRotations(arr, low, mid - 1);

		return countRotations(arr, mid + 1, high);
	}

	public static void main(String[] args) {
		int arr[] = { 15, 18, 22, 23, 6, 12,13 };
		int n = arr.length;

		System.out.println(countRotations(arr, 0, n - 1));
	}

}
