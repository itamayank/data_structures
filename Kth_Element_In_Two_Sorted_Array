Find kth element in two sorted array

package mayank.Array;

/**
 * @author Mayank
 *
 */
public class KthElementInTwoSortedArray {

	static int kth(int arr1[], int arr2[], int m, int n, int k) {
		int[] sorted1 = new int[m + n];
		int i = 0, j = 0, d = 0;
		while (i < m && j < n) {
			if (arr1[i] < arr2[j])
				sorted1[d++] = arr1[i++];             
			else
				sorted1[d++] = arr2[j++];
		}
		while (i < m)
			sorted1[d++] = arr1[i++];
		while (j < n)
			sorted1[d++] = arr2[j++];
		return sorted1[k - 1];
	}

	static int kth2(int arr1[], int arr2[], int m, int n, int k) {
		int i = 0, j = 0, d = 0;
		while (i < m && j < n) {
			if (arr1[i] < arr2[j]) {
				if (++d == k)
					return arr1[i];
				i++;
			} else {
				if (++d == k)                                    //best complexity code
					return arr2[j];
				j++;
			}
		}
		while (i < m) {
			if (++d == k)
				return arr1[i];
			i++;
		}
		while (j < n) {
			if (++d == k)
				return arr2[j];
			j++;
		}

		return -1;
	}

	// main function
	public static void main(String[] args) {
		int arr1[] = { 2, 3, 6, 7, 9 };
		int arr2[] = { 1, 4, 8, 10 };
		int k = 5;
		System.out.println(kth(arr1, arr2, 5, 4, k));
		System.out.println(kth2(arr1, arr2, 5, 4, k));
	}
}
