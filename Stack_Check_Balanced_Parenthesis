package mayank.String;

import java.util.Stack;

public class CheckParenthesis {
	
	static boolean isMatchingPair(char character1, char character2)
    {
       if (character1 == '(' && character2 == ')')
         return true;
       else if (character1 == '{' && character2 == '}')
         return true;
       else if (character1 == '[' && character2 == ']')
         return true;
       else
         return false;
    }
	static boolean parenthesisChecker(char exp[]) {
		Stack<Character> st = new Stack<Character>();
		
		for(int i=0;i<exp.length;i++) {
			 if (exp[i] == '{' || exp[i] == '(' || exp[i] == '[')
		            st.push(exp[i]);
		
		if (exp[i] == '}' || exp[i] == ')' || exp[i] == ']')
        {
           if (st.isEmpty())
             {
                 return false;
             } 
           else if ( !isMatchingPair(st.pop(), exp[i]) )
             {
                 return false;
             }
        }
     }
     if (st.isEmpty())
       return true; 
     else
       {   
           return false;
       }
	}
     public static void main(String[] args) {
     {
         char exp[] = {'{','(',')','}','[',']'};
           if (parenthesisChecker(exp))
             System.out.println("Balanced ");
           else
             System.out.println("Not Balanced ");  
     }
	}
}
