a program to find type of array whether it is ascending, descending, ascending rotated or descending rotated

package mayank.Array;

public class TypeOfArray {

	public static int max(int a, int b) {
		return (a > b) ? a : b;
	}

	public static void findType(int arr[]) {
		int i = 0;
		int n = arr.length;

		while (i < n - 1 && arr[i] <= arr[i + 1])
			i++;

		if (i == n - 1) {
			System.out.println("Ascending with maximum element = " + arr[n - 1]);
			return;
		}

		if (i == 0) {
			while (i < n - 1 && arr[i] >= arr[i + 1])
				i++;

			if (i == n - 1) {
				System.out.println("Descending with maximum " + "element = " + arr[0]);
				return;
			}

			if (arr[0] < arr[i + 1]) {
				System.out.println("Descending rotated with" + " maximum element = " + max(arr[0], arr[i + 1]));
				return;
			} else {
				System.out.println("Ascending rotated with" + " maximum element = " + max(arr[0], arr[i + 1]));
				return;
			}
		}

		if (i < n - 1 && arr[0] > arr[i + 1]) {

			System.out.println("Ascending rotated with maximum" + " element = " + max(arr[i], arr[0]));
			return;
		}

		System.out.println("Descending rotated with maximum " + "element " + max(arr[i], arr[0]));
	}

	public static void main(String[] args) {
		int arr1[] = { 4, 5, 6, 1, 2, 3 }; // Ascending rotated
		findType(arr1);

		int arr2[] = { 3, 2, 1, 7, 5, 4 }; // Descending rotated
		findType(arr2);

		int arr3[] = { 1, 2, 3, 4, 5, 8 }; // Ascending
		findType(arr3);

		int arr4[] = { 9, 5, 4, 3, 2, 1 }; // Descending
		findType(arr4);
	}
}
