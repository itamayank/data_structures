package mayank.Array.dp;

public class MinSubsetDiff {

/*Input:  arr[] = {1, 6, 11, 5} 
Output: 1
Explanation:
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11 */	
	
	
	
	static int findMinDiff(int arr[],int i ,int sum, int calculatedSum) {
		
		if(i==0) {
			return Math.abs((sum-calculatedSum) - calculatedSum);
		}
		
		return Math.min(findMinDiff(arr,i-1,sum,calculatedSum+arr[i-1]),
				findMinDiff(arr,i-1,sum,calculatedSum));
		
	}
	
	   static int findMin(int arr[], int n,int sum) 
	    { 
	      
	        boolean dp[][] = new boolean[n + 1][sum + 1]; 
	      
	        for (int i = 0; i <= n; i++) 
	            dp[i][0] = true; 
	      
	        for (int i = 1; i <= sum; i++) 
	            dp[0][i] = false; 
	      
	        for (int i = 1; i <= n; i++) 
	        { 
	            for (int j = 1; j <= sum; j++) 
	            { 
	                dp[i][j] = dp[i - 1][j]; 
	      
	                if (arr[i - 1] <= j) 
	                    dp[i][j] |= dp[i - 1][j - arr[i - 1]]; 
	            } 
	        } 
	        int diff = Integer.MAX_VALUE; 
	          
	        for (int j = sum / 2; j >= 0; j--) 
	        { 
	            // Find the  
	            if (dp[n][j] == true) 
	            { 
	                diff = sum - 2 * j; 
	                break; 
	            } 
	        } 
	        return diff; 
	    } 
	    public static void main (String[] args)  
	    { 
	        int arr[] = {3, 1, 4, 2, 2, 1}; 
	        int n = arr.length; 
	        int sum = 0;  
	        for (int i = 0; i < n; i++) 
	            sum += arr[i];
	        System.out.println ("The minimum difference between 2 sets is - "
	                            + findMin(arr, n ,sum)); 
	        System.out.println("The minimum difference between 2 sets is - "
	                            + findMinDiff(arr, n ,sum,0));
	      
	    } 
}
