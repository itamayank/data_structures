package mayank.String;

import java.util.Stack;  

//

public class CheckParenthesisMinimum {
	//Java Code to count minimum reversal for 
	//making an expression balanced. 

		static int countMinReversals(String expr) 
		{ 
			int len = expr.length();                                        // tc O(n) //sc O(n)
		
			if (len%2 != 0) 
			return -1; 
		
			Stack<Character> s=new Stack<>(); 
			
			for (int i=0; i<len; i++) 
			{ 
				char c = expr.charAt(i); 
				if (c =='}' && !s.empty()) 
				{ 
					if (s.peek()=='{') 
						s.pop(); 
					else
						s.push(c); 
				} 
				else
					s.push(c); 
			} 
		
			int red_len = s.size(); 
		
			int n = 0; 
			while (!s.empty() && s.peek() == '{') 
			{ 
				s.pop(); 
				n++; 
			} 
		
			return (red_len/2 + n%2); 
		} 
		
		public static void main(String[] args) 
		{ 
			String expr = "}{{}}{{{{{"; 
			
			// logic is to remove the balanced parenthesis first then count no of open / 2 and closed parenthesis / 2
			
			System.out.println(countMinReversals(expr)); 
		} 


}
