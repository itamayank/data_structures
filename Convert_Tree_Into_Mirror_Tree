package mayank.BinaryTree;

public class ConvertTreeIntoItsMirror {

	static class Node {
		Node left, right;
		int data;

		Node(int d) {
			this.data = d;
		}
	}

	Node root;

	void mirror() {
		root = mirror(root);
	}

	Node mirror(Node node) {
		if (node == null)
			return node;

		Node left = mirror(node.left);
		Node right = mirror(node.right);

		node.left = right;
		node.right = left;

		return node;
	}

	void inOrder(Node node) {
		if (node == null)
			return;

		inOrder(node.left);
		System.out.print(node.data + " ");

		inOrder(node.right);
	}

	public static void main(String args[]) {
		ConvertTreeIntoItsMirror tree = new ConvertTreeIntoItsMirror();
		tree.root = new Node(1);
		tree.root.left = new Node(2);
		tree.root.right = new Node(3);
		tree.root.left.left = new Node(4);
		tree.root.left.right = new Node(5);

		System.out.println("Inorder traversal of input tree is :");
		tree.inOrder(tree.root);
		System.out.println("");

		tree.mirror();

		System.out.println("Inorder traversal of binary tree is : ");
		tree.inOrder(tree.root);

	}
}
